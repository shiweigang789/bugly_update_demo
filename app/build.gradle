apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply from: 'tinker-support.gradle'
//apply plugin: 'walle'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.lovely.pig.buglyupdate"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 4
        versionName "1.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // 开启multidex
        multiDexEnabled true
    }

    signingConfigs {
        releaseConfig {
            keyAlias 'xys'
            keyPassword 'HHS@#jhjsGT#$%^!@#Ol9394'
            storeFile file('../keystore/xys_key.keystore')
            storePassword 'HHS@#jhjsGT#$%^!@#Ol9394'
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.releaseConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // 多dex配置
    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.6'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，
    //使用walle进行多渠道打包
//    compile 'com.meituan.android.walle:library:1.1.3'

}

//walle {
//    // 指定渠道包的输出路径
//    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
//    // 定制渠道包的APK的文件名称
//    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
//    // 渠道配置文件
//    channelFile = new File("${project.getProjectDir()}/channel.txt")
//}